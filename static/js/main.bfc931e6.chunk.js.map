{"version":3,"sources":["components/Footer/styles.js","components/Footer/index.jsx","components/Header/index.jsx","components/Game/styles.js","components/Game/index.jsx","App.js","index.js"],"names":["useStyles","makeStyles","theme","footer","backgroundColor","palette","background","paper","padding","spacing","Footer","classes","className","Typography","variant","align","gutterBottom","color","component","Link","href","GitHub","Header","AppBar","position","Toolbar","content","container","marginTop","successText","borderColor","borderWidth","successButton","Game","numberRef","useRef","useState","rambomNumber","setRambomNumber","numberAttempts","setNumberAttempts","answer","setAnswer","message","setMessage","useEffect","Math","round","random","Container","maxWidth","paragraph","Grid","justify","item","sm","TextField","fullWidth","type","inputRef","label","margin","disabled","InputLabelProps","shrink","Button","onClick","attempts","current","value","parseInt","handleAttempts","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bfc931e6.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    footer: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(6),\r\n      },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport { Typography , Link } from '@material-ui/core';\r\nimport { GitHub } from '@material-ui/icons';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst Footer = () => {\r\n    const classes = useStyles();\r\n\r\n  return <footer className={classes.footer}>\r\n            <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n                 Coding Challenge \r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n                <Link  href=\"https://github.com/eliseofernandes\">\r\n                    <GitHub color=\"inherit\" />\r\n                </Link>\r\n            </Typography>            \r\n         </footer>\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Toolbar , AppBar,  } from '@material-ui/core';\r\n\r\n\r\nconst Header = () => {\r\n\r\n  return <AppBar position=\"relative\" >\r\n             <Toolbar variant=\"dense\" />\r\n         </AppBar>\r\n  \r\n}\r\n\r\nexport default Header;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    content: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(2, 0, 1),\r\n      },\r\n    container: {\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    successText: {\r\n        '& input  + fieldset':{\r\n        borderColor: 'green',\r\n        borderWidth: 2,\r\n    }\r\n    },\r\n    successButton: {\r\n        background: 'green',                   \r\n    },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useState , useEffect, useRef } from 'react';\r\nimport { Container , Typography, Grid, TextField, Button   } from '@material-ui/core';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst Game = () => {\r\n    const classes = useStyles();\r\n    const numberRef = useRef();\r\n\r\n    const [rambomNumber, setRambomNumber] = useState(null);\r\n    const [numberAttempts, setNumberAttempts] = useState(0);\r\n    const [answer, setAnswer] = useState(false);\r\n    const [message, setMessage] = useState('Insira um número de 0 à 100');\r\n\r\n    useEffect(() => {\r\n        if(!rambomNumber){\r\n           setRambomNumber(Math.round(Math.random() * 100));\r\n        }\r\n    },[rambomNumber])\r\n\r\n    const handleAttempts = () => {        \r\n        setNumberAttempts(item => item + 1);  \r\n        const attempts = numberRef.current.value;\r\n        if(parseInt(attempts) === rambomNumber){\r\n            setMessage(\"Parabéns, você acertou! O número é \" + attempts);\r\n            setAnswer(true);\r\n        }\r\n        else if(parseInt(attempts) > rambomNumber){\r\n            setMessage(\"Hmmm, o número que pensei é menor que \" + attempts);\r\n        }\r\n        else {\r\n            setMessage(\"Hmmm, o número que pensei é maior que \" + attempts);\r\n        }\r\n        numberRef.current.value = null;        \r\n    }\r\n\r\n    const handleNewGame = () => {\r\n        setMessage('Insira um número de 0 à 100');\r\n        setAnswer(false);\r\n        setNumberAttempts(0);\r\n        setRambomNumber(null);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.content}>          \r\n            <Container maxWidth=\"sm\">\r\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n                Number Guessing Game\r\n            </Typography>\r\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\r\n                Adivinhe o número que pensei.\r\n            </Typography>\r\n            <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" paragraph>\r\n                 {message}\r\n            </Typography>            \r\n            <div className={classes.container}>\r\n                <Grid container spacing={2} justify=\"center\">                \r\n                <Grid item sm={6}>                    \r\n                    <TextField \r\n                        fullWidth \r\n                        className={answer ? classes.successText : ''}\r\n                        type=\"number\" \r\n                        inputRef={numberRef}\r\n                        label={`Tentativa(s): ${numberAttempts}`}\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\" \r\n                        disabled={answer}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                    />\r\n                </Grid>                \r\n                </Grid>\r\n                <Grid container spacing={2} justify=\"center\">   \r\n                <Grid item sm={6}>   \r\n                    <Button \r\n                        fullWidth \r\n                        className={answer ? classes.successButton : ''}\r\n                        variant=\"contained\" \r\n                        color=\"primary\"\r\n                        onClick={() => answer ? handleNewGame() : handleAttempts()}\r\n                    >\r\n                      {answer ? \"Jogar novamente\" : \"Verificar\"}\r\n                    </Button>\r\n                </Grid>\r\n                </Grid>\r\n            </div>\r\n            </Container>\r\n        </div> \r\n    );  \r\n}\r\n\r\nexport default Game;","import React from 'react';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport Game from './components/Game';\n\n\nconst App = () => {\n  return (\n    <>\n        <Header />     \n        <main>\n            <Game />\n        </main>\n        <Footer />\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}